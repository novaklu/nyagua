/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nyagua;

import dispatching.Watched;
import dispatching.Watcher;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import nyagua.data.Aquarium;

/**
 *
 * @author rgi
 */
public class AquariumPanel extends javax.swing.JPanel {
    
    ActionListener al = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            if(e.getID()==Watched.CHANGED_UNITS_SETTINGS){
                refreshUnits();
            }else if(e.getID()==Watched.REQUEST_CLEAN_ALL_FIELDS){
                CleanAllFields();
            }
        }
    };            
    Watcher settingWatch=new Watcher(al);

    /**
     * Creates new form AquariumPanel
     */
    public AquariumPanel() {
        initComponents();
        initCutAndPaste();
        Watched nyMessages=Watched.getInstance();
        nyMessages.addObserver(settingWatch);
    }
    
     /**
     * Cleans all fields
     */
    private void CleanAllFields () {
         JTextField[] jtfList = {
                    aquariumNameTextField, aquariumDeepTextField,
                    aquariumWidthTextField, aquariumHeightTextField, 
                    aquariumWaterVolTextField, aquariumTypeTextField, 
                    aquariumBottomTextField, aquariumTankVolTextField, 
                    aquariumGlassThickTextField,aquariumWaterIntTextField};
                Util.CleanTextFields(jtfList);
                aquariumNotesTextArea.setText(null);
                aquariumStartDateTextField.setDate(null);                
                aquariumEndDateTextField.setDate(null);                
                aquariumOCCheckBox.setSelected(false);
                aquariumImageLabelImg.setIcon(null);    
                refreshUnits();  
    }

    /**
     * Load aquarium data
     */
    public void LoadData() {
        CleanAllFields();
        Aquarium tank=Aquarium.getById(Global.AqID);
        aquariumNameTextField.setText(tank.getName());// NOI18N
        aquariumDeepTextField.setText(tank.getDepth());// NOI18N
        aquariumWidthTextField.setText(tank.getWidth());// NOI18N
        aquariumHeightTextField.setText(tank.getHeight());// NOI18N
        aquariumWaterVolTextField.setText(tank.getVolume());// NOI18N
        aquariumTypeTextField.setText(tank.getType());// NOI18N
        aquariumStartDateTextField.setDate(tank.getStartDate());// NOI18N
        aquariumEndDateTextField.setDate(tank.getEndDate());// NOI18N
        aquariumOCCheckBox.setSelected(tank.getOpen());
        aquariumTankVolTextField.setText(tank.getTankVolume());
        aquariumBottomTextField.setText(tank.getBottom());
        aquariumGlassThickTextField.setText(tank.getGlassTick());
        aquariumNotesTextArea.setText(tank.getNotes());
        aquariumWaterIntTextField.setText(tank.getWaterChange());// NOI18N
        //try to load image
        BufferedImage img = null;
        aquariumImageLabelImg.setText(null);
        if (tank.hasImage()){
            //aquariumImageLabelImg.setIcon((new javax.swing.ImageIcon(tank.getImage())));
            Util.ImageDisplayResize(tank.getImage(), aquariumImageLabelImg, 700);
        } else {
            aquariumImageLabelImg.setText(java.util.ResourceBundle.getBundle("nyagua/Bundle").getString("NO_IMAGE!"));
            aquariumImageLabelImg.setIcon(null);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        aquariumImageLoadButton = new javax.swing.JButton();
        aquariumNameLabel = new javax.swing.JLabel();
        aquariumDeepLabel = new javax.swing.JLabel();
        aquariumWidthLabel = new javax.swing.JLabel();
        aquariumNameTextField = new javax.swing.JTextField();
        aquariumDeepTextField = new javax.swing.JTextField();
        aquariumWidthTextField = new javax.swing.JTextField();
        aquariumHeightLabel = new javax.swing.JLabel();
        aquariumHeightTextField = new javax.swing.JTextField();
        aquariumWaterVolLabel = new javax.swing.JLabel();
        aquariumWaterVolTextField = new javax.swing.JTextField();
        aquariumWaterIntLabel = new javax.swing.JLabel();
        aquariumWaterIntTextField = new javax.swing.JTextField();
        aquariumTypeLabel = new javax.swing.JLabel();
        aquariumTypeTextField = new javax.swing.JTextField();
        aquariumStartDateLabel = new javax.swing.JLabel();
        aquariumEndDateLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        aquariumImageLabelImg = new javax.swing.JLabel();
        aquariumOCCheckBox = new javax.swing.JCheckBox();
        jToolBar3 = new javax.swing.JToolBar();
        aquariumClearButton = new javax.swing.JButton();
        aquariumSaveButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        aquariumDeleteButton = new javax.swing.JButton();
        jSeparator16 = new javax.swing.JToolBar.Separator();
        aquariumReportButton = new javax.swing.JButton();
        aquariumImageDelButton = new javax.swing.JButton();
        aquariumTankVolLabel = new javax.swing.JLabel();
        aquariumTankVolTextField = new javax.swing.JTextField();
        aquariumBottomLabel = new javax.swing.JLabel();
        aquariumBottomTextField = new javax.swing.JTextField();
        aquariumStartDateTextField = new com.toedter.calendar.JDateChooser();
        aquariumEndDateTextField = new com.toedter.calendar.JDateChooser();
        aquariumVolumeCalcButton = new javax.swing.JButton();
        unitDeepLabel = new javax.swing.JLabel();
        unitankVolLabel = new javax.swing.JLabel();
        unitWidthLabel = new javax.swing.JLabel();
        unitHeightLabel = new javax.swing.JLabel();
        unitWaterVolLabel = new javax.swing.JLabel();
        aquariumGlassThickLabel = new javax.swing.JLabel();
        unitGlassThickLabel = new javax.swing.JLabel();
        aquariumGlassThickTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        aquariumNotesTextArea = new javax.swing.JTextArea();
        aquariumNotesLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        aquariumImageLoadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/insert-image.png"))); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("nyagua/Bundle"); // NOI18N
        aquariumImageLoadButton.setToolTipText(bundle.getString("Ny.aquariumImageLoadButton.toolTipText")); // NOI18N
        aquariumImageLoadButton.setMaximumSize(null);
        aquariumImageLoadButton.setMinimumSize(null);
        aquariumImageLoadButton.setPreferredSize(null);
        aquariumImageLoadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aquariumImageLoadButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = -22;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 12, 0, 0);
        add(aquariumImageLoadButton, gridBagConstraints);

        aquariumNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        aquariumNameLabel.setText(bundle.getString("Ny.aquariumNameLabel.text")); // NOI18N
        aquariumNameLabel.setMinimumSize(new java.awt.Dimension(60, 15));
        aquariumNameLabel.setPreferredSize(new java.awt.Dimension(60, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 2);
        add(aquariumNameLabel, gridBagConstraints);

        aquariumDeepLabel.setText(bundle.getString("Lenght")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 2);
        add(aquariumDeepLabel, gridBagConstraints);

        aquariumWidthLabel.setText(bundle.getString("WIDTH_")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 2);
        add(aquariumWidthLabel, gridBagConstraints);

        aquariumNameTextField.setMinimumSize(new java.awt.Dimension(30, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 349;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 15);
        add(aquariumNameTextField, gridBagConstraints);

        aquariumDeepTextField.setMinimumSize(new java.awt.Dimension(30, 19));
        aquariumDeepTextField.setPreferredSize(new java.awt.Dimension(80, 19));
        aquariumDeepTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aquariumDeepTextFieldKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 60;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 1);
        add(aquariumDeepTextField, gridBagConstraints);

        aquariumWidthTextField.setMinimumSize(new java.awt.Dimension(30, 19));
        aquariumWidthTextField.setPreferredSize(new java.awt.Dimension(80, 19));
        aquariumWidthTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aquariumWidthTextFieldKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 65;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 1);
        add(aquariumWidthTextField, gridBagConstraints);

        aquariumHeightLabel.setText(bundle.getString("Ny.aquariumHeightLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 2);
        add(aquariumHeightLabel, gridBagConstraints);

        aquariumHeightTextField.setMinimumSize(new java.awt.Dimension(30, 19));
        aquariumHeightTextField.setPreferredSize(new java.awt.Dimension(80, 19));
        aquariumHeightTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aquariumHeightTextFieldKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 60;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 1);
        add(aquariumHeightTextField, gridBagConstraints);

        aquariumWaterVolLabel.setText(bundle.getString("WATER_VOLUME")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 2);
        add(aquariumWaterVolLabel, gridBagConstraints);

        aquariumWaterVolTextField.setToolTipText("");
        aquariumWaterVolTextField.setMinimumSize(new java.awt.Dimension(30, 19));
        aquariumWaterVolTextField.setPreferredSize(new java.awt.Dimension(80, 19));
        aquariumWaterVolTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aquariumWaterVolTextFieldKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 60;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 1);
        add(aquariumWaterVolTextField, gridBagConstraints);

        aquariumWaterIntLabel.setText(bundle.getString("Water_change_interval")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 2);
        add(aquariumWaterIntLabel, gridBagConstraints);

        aquariumWaterIntTextField.setToolTipText("");
        aquariumWaterIntTextField.setMinimumSize(new java.awt.Dimension(30, 19));
        aquariumWaterIntTextField.setPreferredSize(new java.awt.Dimension(80, 19));
        aquariumWaterIntTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aquariumWaterIntTextFieldKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 60;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 1);
        add(aquariumWaterIntTextField, gridBagConstraints);

        aquariumTypeLabel.setText(bundle.getString("TYPE")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 2);
        add(aquariumTypeLabel, gridBagConstraints);

        aquariumTypeTextField.setMinimumSize(new java.awt.Dimension(30, 19));
        aquariumTypeTextField.setPreferredSize(new java.awt.Dimension(100, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 60;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(aquariumTypeTextField, gridBagConstraints);

        aquariumStartDateLabel.setText(bundle.getString("Ny.aquariumStartDateLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 2);
        add(aquariumStartDateLabel, gridBagConstraints);

        aquariumEndDateLabel.setText(bundle.getString("Ny.aquariumEndDateLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 2);
        add(aquariumEndDateLabel, gridBagConstraints);

        aquariumImageLabelImg.setForeground(new java.awt.Color(255, 102, 51));
        aquariumImageLabelImg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        aquariumImageLabelImg.setText(bundle.getString("NO_IMAGE!")); // NOI18N
        aquariumImageLabelImg.setMaximumSize(new java.awt.Dimension(600, 200));
        aquariumImageLabelImg.setMinimumSize(new java.awt.Dimension(600, 200));
        aquariumImageLabelImg.setPreferredSize(new java.awt.Dimension(600, 200));
        jScrollPane3.setViewportView(aquariumImageLabelImg);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 390;
        gridBagConstraints.ipady = 228;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        add(jScrollPane3, gridBagConstraints);

        aquariumOCCheckBox.setText(bundle.getString("Ny.aquariumOCCheckBox.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 20);
        add(aquariumOCCheckBox, gridBagConstraints);

        jToolBar3.setFloatable(false);
        jToolBar3.setRollover(true);

        aquariumClearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/btn_clear.png"))); // NOI18N
        aquariumClearButton.setToolTipText(bundle.getString("Clear_Fields")); // NOI18N
        aquariumClearButton.setFocusable(false);
        aquariumClearButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        aquariumClearButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        aquariumClearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aquariumClearButtonMouseClicked(evt);
            }
        });
        jToolBar3.add(aquariumClearButton);

        aquariumSaveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/btn_accept.png"))); // NOI18N
        aquariumSaveButton.setToolTipText(bundle.getString("Confirm_record")); // NOI18N
        aquariumSaveButton.setFocusable(false);
        aquariumSaveButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        aquariumSaveButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        aquariumSaveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aquariumSaveButtonMouseClicked(evt);
            }
        });
        jToolBar3.add(aquariumSaveButton);
        jToolBar3.add(jSeparator3);

        aquariumDeleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/btn_delete.png"))); // NOI18N
        aquariumDeleteButton.setToolTipText(bundle.getString("Delete_record")); // NOI18N
        aquariumDeleteButton.setFocusable(false);
        aquariumDeleteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        aquariumDeleteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        aquariumDeleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aquariumDeleteButtonMouseClicked(evt);
            }
        });
        jToolBar3.add(aquariumDeleteButton);
        jToolBar3.add(jSeparator16);

        aquariumReportButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/document-properties.png"))); // NOI18N
        aquariumReportButton.setToolTipText(bundle.getString("Create_report")); // NOI18N
        aquariumReportButton.setFocusable(false);
        aquariumReportButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        aquariumReportButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        aquariumReportButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aquariumReportButtonMouseClicked(evt);
            }
        });
        jToolBar3.add(aquariumReportButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 462;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(jToolBar3, gridBagConstraints);

        aquariumImageDelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/archive-remove.png"))); // NOI18N
        aquariumImageDelButton.setToolTipText(bundle.getString("Clear_image")); // NOI18N
        aquariumImageDelButton.setMaximumSize(null);
        aquariumImageDelButton.setMinimumSize(null);
        aquariumImageDelButton.setPreferredSize(null);
        aquariumImageDelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aquariumImageDelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 13, 0, 0);
        add(aquariumImageDelButton, gridBagConstraints);

        aquariumTankVolLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        aquariumTankVolLabel.setText(bundle.getString("Ny.aquariumTankVolLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 2);
        add(aquariumTankVolLabel, gridBagConstraints);

        aquariumTankVolTextField.setMinimumSize(new java.awt.Dimension(30, 19));
        aquariumTankVolTextField.setPreferredSize(new java.awt.Dimension(80, 19));
        aquariumTankVolTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aquariumTankVolTextFieldKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 60;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 1);
        add(aquariumTankVolTextField, gridBagConstraints);

        aquariumBottomLabel.setText(bundle.getString("Ny.aquariumBottomLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 2);
        add(aquariumBottomLabel, gridBagConstraints);

        aquariumBottomTextField.setMinimumSize(new java.awt.Dimension(30, 19));
        aquariumBottomTextField.setPreferredSize(new java.awt.Dimension(100, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 349;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 15);
        add(aquariumBottomTextField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 1);
        add(aquariumStartDateTextField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 1);
        add(aquariumEndDateTextField, gridBagConstraints);

        aquariumVolumeCalcButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calculator.png"))); // NOI18N
        aquariumVolumeCalcButton.setToolTipText(bundle.getString("Calc")); // NOI18N
        aquariumVolumeCalcButton.setMaximumSize(new java.awt.Dimension(20, 20));
        aquariumVolumeCalcButton.setMinimumSize(new java.awt.Dimension(20, 20));
        aquariumVolumeCalcButton.setPreferredSize(new java.awt.Dimension(20, 20));
        aquariumVolumeCalcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aquariumVolumeCalcButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(aquariumVolumeCalcButton, gridBagConstraints);

        unitDeepLabel.setText(bundle.getString("cm")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        add(unitDeepLabel, gridBagConstraints);

        unitankVolLabel.setText(bundle.getString("l")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        add(unitankVolLabel, gridBagConstraints);

        unitWidthLabel.setText(bundle.getString("cm")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        add(unitWidthLabel, gridBagConstraints);

        unitHeightLabel.setText(bundle.getString("cm")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 15);
        add(unitHeightLabel, gridBagConstraints);

        unitWaterVolLabel.setText(bundle.getString("l")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 15);
        add(unitWaterVolLabel, gridBagConstraints);

        aquariumGlassThickLabel.setText(bundle.getString("Ny.aquariumGlassThickLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 2);
        add(aquariumGlassThickLabel, gridBagConstraints);

        unitGlassThickLabel.setText(bundle.getString("Ny.unitGlassThickLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        add(unitGlassThickLabel, gridBagConstraints);

        aquariumGlassThickTextField.setMinimumSize(new java.awt.Dimension(30, 19));
        aquariumGlassThickTextField.setPreferredSize(new java.awt.Dimension(80, 19));
        aquariumGlassThickTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aquariumGlassThickTextFieldKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 60;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 1);
        add(aquariumGlassThickTextField, gridBagConstraints);

        aquariumNotesTextArea.setColumns(20);
        aquariumNotesTextArea.setRows(5);
        jScrollPane2.setViewportView(aquariumNotesTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 15);
        add(jScrollPane2, gridBagConstraints);

        aquariumNotesLabel.setText(bundle.getString("Notes_")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 2);
        add(aquariumNotesLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void aquariumImageLoadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aquariumImageLoadButtonActionPerformed
        /**Load image from file to image field*/
        aquariumImageLabelImg.setText(null);
        Util.ImageLoadResize(aquariumImageLabelImg,600);
    }//GEN-LAST:event_aquariumImageLoadButtonActionPerformed

    private void aquariumDeepTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aquariumDeepTextFieldKeyTyped
        // allow only numbers a related chars
        Util.checkNumericKey(evt);
    }//GEN-LAST:event_aquariumDeepTextFieldKeyTyped

    private void aquariumWidthTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aquariumWidthTextFieldKeyTyped
        // allow only numbers a related chars
        Util.checkNumericKey(evt);
    }//GEN-LAST:event_aquariumWidthTextFieldKeyTyped

    private void aquariumHeightTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aquariumHeightTextFieldKeyTyped
        // allow only numbers a related chars
        Util.checkNumericKey(evt);
    }//GEN-LAST:event_aquariumHeightTextFieldKeyTyped

    private void aquariumWaterVolTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aquariumWaterVolTextFieldKeyTyped
        // allow only numbers a related chars
        Util.checkNumericKey(evt);
    }//GEN-LAST:event_aquariumWaterVolTextFieldKeyTyped

    private void aquariumClearButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aquariumClearButtonMouseClicked
        /** Cleans all textFields on tab1 (aquarium)*/
        
        Global.AqID = 0;
        Watched nyMessages=Watched.getInstance();
        nyMessages.Update(Watched.REQUEST_CLEAR_LIST);
        nyMessages.Update(Watched.REQUEST_CLEAN_ALL_FIELDS);
        Ny.populateTable();
    }//GEN-LAST:event_aquariumClearButtonMouseClicked

    private void aquariumSaveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aquariumSaveButtonMouseClicked
        /**Insert record on db for table aquarium or update it if existing*/
        String currID = Integer.toString(Global.AqID);
        Aquarium tank=new Aquarium();
        if (currID == null || currID.equals("")) {
            tank.setId(0);
        } else {
            tank.setId(Integer.valueOf(currID));
        }
        if (LocUtil.isValidDate(aquariumStartDateTextField.getDate())){
            if (aquariumStartDateTextField.getDate() == null){
                tank.setStartDate(LocUtil.delocalizeDate(
                        LocUtil.getCurrentlocalizedDate()));
                
            }else {
                tank.setStartDate(LocUtil.delocalizeDate(
                        aquariumStartDateTextField.getDate()));
                
            }
        } else {
            Util.showErrorMsg(java.util.ResourceBundle.getBundle(
                    "nyagua/Bundle").getString("INVALID_DATE."));
            
            aquariumStartDateTextField.requestFocus();
            return;
        }
        if (LocUtil.isValidDate(aquariumEndDateTextField.getDate())){
            tank.setEndDate(LocUtil.delocalizeDate(
                    aquariumEndDateTextField.getDate()));
        } else {
            Util.showErrorMsg(java.util.ResourceBundle.getBundle(
                    "nyagua/Bundle").getString("INVALID_DATE."));
            aquariumEndDateTextField.requestFocus();
            return;
        }
        tank.setName(aquariumNameTextField.getText());
        tank.setDepth(LocUtil.delocalizeDouble(
                aquariumDeepTextField.getText()));
        tank.setWidth(LocUtil.delocalizeDouble(
                aquariumWidthTextField.getText()));
        tank.setHeight(LocUtil.delocalizeDouble(
                aquariumHeightTextField.getText()));
        tank.setGlassTick(LocUtil.delocalizeDouble(
                aquariumGlassThickTextField.getText()));
        tank.setVolume(LocUtil.delocalizeDouble(
                aquariumWaterVolTextField.getText()));
        tank.setTankVolume(LocUtil.delocalizeDouble(
                aquariumTankVolTextField.getText()));
        tank.setOpen(aquariumOCCheckBox.isSelected());
        tank.setBottom(aquariumBottomTextField.getText());
        tank.setType(aquariumTypeTextField.getText());
        tank.setStartDate(LocUtil.delocalizeDate(
                aquariumStartDateTextField.getDate()));
        tank.setEndDate(LocUtil.delocalizeDate(
                aquariumEndDateTextField.getDate()));
        tank.setNotes(aquariumNotesTextArea.getText());
        tank.setWaterChange(LocUtil.delocalizeDouble(
                aquariumWaterIntTextField.getText()));

        //save image
        BufferedImage image;
        ImageIcon icn;
        icn = (ImageIcon) aquariumImageLabelImg.getIcon();
        if (icn != null) {
            image = (BufferedImage) icn.getImage();
            tank.setImage(image);
        }

        Aquarium.save(tank);
        Ny.populateTable();
        Watched nyMessages=Watched.getInstance();
        nyMessages.Update(Watched.REQUEST_POPULATE_TREE);
        nyMessages.Update(Watched.REQUEST_CLEAN_ALL_FIELDS);
    }//GEN-LAST:event_aquariumSaveButtonMouseClicked

    private void aquariumDeleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aquariumDeleteButtonMouseClicked
        /**Delete current acquarium data*/
        int a = JOptionPane.showConfirmDialog(null,
            java.util.ResourceBundle.getBundle(
                    "nyagua/Bundle").getString("WARNINGDELETE") +
            java.util.ResourceBundle.getBundle(
                    "nyagua/Bundle").getString("ASK_DELETION"),
            java.util.ResourceBundle.getBundle(
                    "nyagua/Bundle").getString(
                            "WARNING"), JOptionPane.YES_NO_OPTION);
        if (a == JOptionPane.YES_OPTION) {
            String id = Integer.toString(Global.AqID);
            Aquarium.deleteById(id);
            Ny.populateTable();
            Watched nyMessages=Watched.getInstance();
            nyMessages.Update(Watched.REQUEST_POPULATE_TREE);
            nyMessages.Update(Watched.REQUEST_CLEAN_ALL_FIELDS);
            try {
                DB.DBDeleteImage("Aquarium", id);// NOI18N
            } finally {
            }
        }
    }//GEN-LAST:event_aquariumDeleteButtonMouseClicked

    private void aquariumReportButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aquariumReportButtonMouseClicked
        // Show aquarium report
        if (Global.AqID == 0) {
            AppUtil.msgSelectAquarium();
            return;
        }
        try {
            Report.AquariumReport();
        } catch (IOException | ClassNotFoundException | SQLException ex) {
            _log.log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_aquariumReportButtonMouseClicked

    private void aquariumImageDelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aquariumImageDelButtonActionPerformed
        /** Clean image field*/
        aquariumImageLabelImg.setText(java.util.ResourceBundle.getBundle("nyagua/Bundle").getString("NO_IMAGE!"));
        aquariumImageLabelImg.setIcon(null);
    }//GEN-LAST:event_aquariumImageDelButtonActionPerformed

    private void aquariumTankVolTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aquariumTankVolTextFieldKeyTyped
        //
    }//GEN-LAST:event_aquariumTankVolTextFieldKeyTyped

    private void aquariumVolumeCalcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aquariumVolumeCalcButtonActionPerformed
        // Call automativ volume calculation
        if (Global.useUnitsInForms){
            String volume;
            if (!aquariumGlassThickTextField.getText().isEmpty()) {
                volume=AppUtil.calcAquariumVolume(
                    aquariumDeepTextField.getText(),
                    aquariumWidthTextField.getText(),
                    aquariumHeightTextField.getText(),
                    aquariumGlassThickTextField.getText());
            } else {
                volume=AppUtil.calcAquariumVolume(
                    aquariumDeepTextField.getText(),
                    aquariumWidthTextField.getText(),
                    aquariumHeightTextField.getText());
            }
            if (!volume.isEmpty()){
                aquariumTankVolTextField.setText(volume);
                String waterVolume = AppUtil.calcWaterVolFromVol(volume);
                if (!waterVolume.isEmpty()){
                    aquariumWaterVolTextField.setText(waterVolume);
                }
            }
        }
    }//GEN-LAST:event_aquariumVolumeCalcButtonActionPerformed

    private void aquariumGlassThickTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aquariumGlassThickTextFieldKeyTyped
        // allow only numbers a related chars
        Util.checkNumericKey(evt);
    }//GEN-LAST:event_aquariumGlassThickTextFieldKeyTyped

    private void aquariumWaterIntTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aquariumWaterIntTextFieldKeyTyped
        // allow only numbers a related chars
        Util.checkNumericKey(evt);
    }//GEN-LAST:event_aquariumWaterIntTextFieldKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aquariumBottomLabel;
    private javax.swing.JTextField aquariumBottomTextField;
    private javax.swing.JButton aquariumClearButton;
    private javax.swing.JLabel aquariumDeepLabel;
    private javax.swing.JTextField aquariumDeepTextField;
    private javax.swing.JButton aquariumDeleteButton;
    private javax.swing.JLabel aquariumEndDateLabel;
    private com.toedter.calendar.JDateChooser aquariumEndDateTextField;
    private javax.swing.JLabel aquariumGlassThickLabel;
    private javax.swing.JTextField aquariumGlassThickTextField;
    private javax.swing.JLabel aquariumHeightLabel;
    private javax.swing.JTextField aquariumHeightTextField;
    private javax.swing.JButton aquariumImageDelButton;
    private static javax.swing.JLabel aquariumImageLabelImg;
    private javax.swing.JButton aquariumImageLoadButton;
    private javax.swing.JLabel aquariumNameLabel;
    private javax.swing.JTextField aquariumNameTextField;
    private javax.swing.JLabel aquariumNotesLabel;
    private javax.swing.JTextArea aquariumNotesTextArea;
    private javax.swing.JCheckBox aquariumOCCheckBox;
    private javax.swing.JButton aquariumReportButton;
    private javax.swing.JButton aquariumSaveButton;
    private javax.swing.JLabel aquariumStartDateLabel;
    private com.toedter.calendar.JDateChooser aquariumStartDateTextField;
    private javax.swing.JLabel aquariumTankVolLabel;
    private javax.swing.JTextField aquariumTankVolTextField;
    private javax.swing.JLabel aquariumTypeLabel;
    private javax.swing.JTextField aquariumTypeTextField;
    private javax.swing.JButton aquariumVolumeCalcButton;
    private javax.swing.JLabel aquariumWaterIntLabel;
    private javax.swing.JTextField aquariumWaterIntTextField;
    private javax.swing.JLabel aquariumWaterVolLabel;
    private javax.swing.JTextField aquariumWaterVolTextField;
    private javax.swing.JLabel aquariumWidthLabel;
    private javax.swing.JTextField aquariumWidthTextField;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar.Separator jSeparator16;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JLabel unitDeepLabel;
    private javax.swing.JLabel unitGlassThickLabel;
    private javax.swing.JLabel unitHeightLabel;
    private javax.swing.JLabel unitWaterVolLabel;
    private javax.swing.JLabel unitWidthLabel;
    private javax.swing.JLabel unitankVolLabel;
    // End of variables declaration//GEN-END:variables

    
    /**
     * refresh units labels in form
     */
    private void refreshUnits(){
        unitDeepLabel.setText(Global.lenghtunit);
        unitWidthLabel.setText(Global.lenghtunit);
        unitHeightLabel.setText(Global.lenghtunit);
        unitGlassThickLabel.setText(Global.lenghtunit);
        unitankVolLabel.setText(Global.volunit);
        unitWaterVolLabel.setText(Global.volunit);
        
        aquariumStartDateTextField.setDateFormatString(Global.dateFormat);
        aquariumEndDateTextField.setDateFormatString(Global.dateFormat); 
    }
    
    private void initCutAndPaste(){
        aquariumNameTextField.addMouseListener(new ContextMenuMouseListener());
        aquariumDeepTextField.addMouseListener(new ContextMenuMouseListener());
        aquariumWidthTextField.addMouseListener(new ContextMenuMouseListener());
        aquariumHeightTextField.addMouseListener(new ContextMenuMouseListener());
        aquariumTankVolTextField.addMouseListener(new ContextMenuMouseListener());
        aquariumWaterVolTextField.addMouseListener(new ContextMenuMouseListener());
        aquariumTypeTextField.addMouseListener(new ContextMenuMouseListener());
        aquariumBottomTextField.addMouseListener(new ContextMenuMouseListener());
        aquariumGlassThickTextField.addMouseListener(new ContextMenuMouseListener());
        aquariumNotesTextArea.addMouseListener(new ContextMenuMouseListener());
        aquariumWaterIntTextField.addMouseListener(new ContextMenuMouseListener());
    }

    private static final Logger _log = Logger.getLogger(AquariumPanel.class.getName());
    
}
