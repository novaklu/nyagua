/*
 * Nyagua - Aquarium Manager
 *    Copyright (C) 2010 Rudi Giacomini Pilon *
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

package nyagua;

import components.ZipFilter;
import java.io.File;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 * Database Selection form
 * 
 * @author Rudi Giacomini Pilon
 * @version 1.0
 */
public class BaseImport extends javax.swing.JDialog {
    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;
    /** status for window */
    private boolean status=false;
    


    /** Creates new form DBSelector
     * 
     * @param parent
     * @param modal 
     *      
     */
    public BaseImport(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();  
        
    }

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }
    
    public String getFullFileName() {
        return pathTextField.getText();
    }
    
    public String getSelectedTable() {
        if (fishRadioButton.isSelected()) {
            return ExpImp.FISH_TABLE;
        }  
        if (invRadioButton.isSelected()) {
            return ExpImp.INV_TABLE;
        }  
        if (plantsRadioButton.isSelected()) {
            return ExpImp.PLANTS_TABLE;
        }  
        return null;
    }
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        importButtonGroup = new javax.swing.ButtonGroup();
        containerPanel = new javax.swing.JPanel();
        imageLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        messagePanel = new javax.swing.JPanel();
        messageLabel = new javax.swing.JLabel();
        pathTextField = new javax.swing.JTextField();
        pathSelectButton = new javax.swing.JButton();
        pathLabel = new javax.swing.JLabel();
        fishRadioButton = new javax.swing.JRadioButton();
        invRadioButton = new javax.swing.JRadioButton();
        plantsRadioButton = new javax.swing.JRadioButton();

        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        containerPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        imageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wiz4.png"))); // NOI18N
        imageLabel.setMaximumSize(new java.awt.Dimension(150, 240));

        cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete_16x.png"))); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("nyagua/Bundle"); // NOI18N
        cancelButton.setText(bundle.getString("CANCEL")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/ok_16x.png"))); // NOI18N
        okButton.setText(bundle.getString("OK")); // NOI18N
        okButton.setEnabled(false);
        okButton.setSelected(true);
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));

        messageLabel.setText(bundle.getString("import.msg")); // NOI18N

        pathTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathTextFieldActionPerformed(evt);
            }
        });
        pathTextField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                pathTextFieldPropertyChange(evt);
            }
        });

        pathSelectButton.setText(bundle.getString("dot_dot_dot")); // NOI18N
        pathSelectButton.setMinimumSize(new java.awt.Dimension(46, 19));
        pathSelectButton.setPreferredSize(new java.awt.Dimension(46, 19));
        pathSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathSelectButtonActionPerformed(evt);
            }
        });

        pathLabel.setText(bundle.getString("PATH")); // NOI18N

        importButtonGroup.add(fishRadioButton);
        fishRadioButton.setText(bundle.getString("FISHES")); // NOI18N
        fishRadioButton.setEnabled(false);
        fishRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fishRadioButtonActionPerformed(evt);
            }
        });

        importButtonGroup.add(invRadioButton);
        invRadioButton.setText(bundle.getString("INVERTS_")); // NOI18N
        invRadioButton.setEnabled(false);
        invRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invRadioButtonActionPerformed(evt);
            }
        });

        importButtonGroup.add(plantsRadioButton);
        plantsRadioButton.setText(bundle.getString("PLANTS_")); // NOI18N
        plantsRadioButton.setEnabled(false);
        plantsRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plantsRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout messagePanelLayout = new javax.swing.GroupLayout(messagePanel);
        messagePanel.setLayout(messagePanelLayout);
        messagePanelLayout.setHorizontalGroup(
            messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(messageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                    .addGroup(messagePanelLayout.createSequentialGroup()
                        .addGroup(messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(plantsRadioButton)
                            .addComponent(invRadioButton)
                            .addComponent(fishRadioButton)
                            .addComponent(pathLabel)
                            .addGroup(messagePanelLayout.createSequentialGroup()
                                .addComponent(pathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pathSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        messagePanelLayout.setVerticalGroup(
            messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messagePanelLayout.createSequentialGroup()
                .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pathLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pathSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fishRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(invRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(plantsRadioButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout containerPanelLayout = new javax.swing.GroupLayout(containerPanel);
        containerPanel.setLayout(containerPanelLayout);
        containerPanelLayout.setHorizontalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelLayout.createSequentialGroup()
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton))
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(messagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jSeparator1)
        );
        containerPanelLayout.setVerticalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(messagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );

        setSize(new java.awt.Dimension(559, 381));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        status = true;
        doClose(RET_OK);   
         
    }//GEN-LAST:event_okButtonActionPerformed

    
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void pathSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathSelectButtonActionPerformed
        //Select Filename or path
        JFileChooser jfc = new JFileChooser();
        
        jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jfc.setCurrentDirectory(new File (Global.FullFileName.substring(0,
                Global.FullFileName.lastIndexOf(Application.FS))));
        jfc.setFileFilter(new ZipFilter());
        int result = jfc.showOpenDialog(null);
        if (result==JFileChooser.APPROVE_OPTION ) {
            pathTextField.setText((jfc.getSelectedFile().getAbsolutePath()));
            
            _evaluateFile();
        } 
    }//GEN-LAST:event_pathSelectButtonActionPerformed

    private void pathTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathTextFieldActionPerformed
//        _evaluateSelection();_evaluateSelection();
    }//GEN-LAST:event_pathTextFieldActionPerformed

    private void pathTextFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_pathTextFieldPropertyChange
//        _evaluateSelection();
    }//GEN-LAST:event_pathTextFieldPropertyChange

    private void fishRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fishRadioButtonActionPerformed
        okButton.setEnabled(true);
    }//GEN-LAST:event_fishRadioButtonActionPerformed

    private void invRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invRadioButtonActionPerformed
        okButton.setEnabled(true);
    }//GEN-LAST:event_invRadioButtonActionPerformed

    private void plantsRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plantsRadioButtonActionPerformed
        okButton.setEnabled(true);
    }//GEN-LAST:event_plantsRadioButtonActionPerformed

    /**
     * enable ok button when at least one checkbox 
     * has been chose and there is any file name
     */
    private void _evaluateFile() {
          String selFullFilepath = pathTextField.getText();
          String version = ExpImp.getVersion(selFullFilepath);
          String dbVersion;
        try {
            dbVersion = DB.getVersion();
            if ((version == null) || (dbVersion == null) || 
                    (!version.equalsIgnoreCase(dbVersion))) {
                
                 Util.showInfoMsg(
                         java.util.ResourceBundle.getBundle(
                                 "nyagua/Bundle").getString("info-version"));
             }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BaseImport.class.getName()).log(Level.SEVERE, null, ex);
        }
          
          
          if (ExpImp.checkZipFile(selFullFilepath)) {
              //reset all options for file change
              fishRadioButton.setEnabled(false);
              invRadioButton.setEnabled(false);
              plantsRadioButton.setEnabled(false);
              List<String> tables = ExpImp.getTablesNames(selFullFilepath);
              for (String table : tables) {
                  if (table.equalsIgnoreCase(ExpImp.FISH_TABLE)) {
                      fishRadioButton.setEnabled(true);
                  }
                  if (table.equalsIgnoreCase(ExpImp.INV_TABLE)) {
                      invRadioButton.setEnabled(true);
                  }
                  if (table.equalsIgnoreCase(ExpImp.PLANTS_TABLE)) {
                      plantsRadioButton.setEnabled(true);
                  }
              }
          }
          
    }
    
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                BaseImport dialog = new BaseImport(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JRadioButton fishRadioButton;
    private javax.swing.JLabel imageLabel;
    private javax.swing.ButtonGroup importButtonGroup;
    private javax.swing.JRadioButton invRadioButton;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JPanel messagePanel;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel pathLabel;
    private javax.swing.JButton pathSelectButton;
    private javax.swing.JTextField pathTextField;
    private javax.swing.JRadioButton plantsRadioButton;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
    
}
